{
	"schemaVersion": "2.0",
	"id": 0,
	"name": "jexl-extended",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 222,
			"name": "_eval",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 714,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L714"
				}
			],
			"signatures": [
				{
					"id": 223,
					"name": "_eval",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Evaluate provided and return the result.\r\nIf only one argument is provided, it is expected that the first argument is a JEXL expression.\r\nIf two arguments are provided, the first argument is the context (must be an object) and the second argument is the JEXL expression.\r\nThe expression uses the default JEXL extended grammar and can't use any custom defined functions or transforms."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 714,
							"character": 21,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L714"
						}
					],
					"parameters": [
						{
							"id": 224,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 225,
							"name": "expression",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 85,
			"name": "absoluteValue",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 293,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L293"
				}
			],
			"signatures": [
				{
					"id": 86,
					"name": "absoluteValue",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the absolute value of a number."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 293,
							"character": 29,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L293"
						}
					],
					"parameters": [
						{
							"id": 87,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			]
		},
		{
			"id": 169,
			"name": "arrayAny",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 512,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L512"
				}
			],
			"signatures": [
				{
					"id": 170,
					"name": "arrayAny",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Checks whether the provided array has any elements that match the specified expression.\r\nThe expression must be a valid JEXL expression string, and is applied to each element of the array.\r\nThe relative context provided to the expression is an object with the properties value and array (the original array)."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 512,
							"character": 24,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L512"
						}
					],
					"parameters": [
						{
							"id": 171,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						},
						{
							"id": 172,
							"name": "expression",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 140,
			"name": "arrayAppend",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 430,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L430"
				}
			],
			"signatures": [
				{
					"id": 141,
					"name": "arrayAppend",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Appends an element to an array."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 430,
							"character": 27,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L430"
						}
					],
					"parameters": [
						{
							"id": 142,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			]
		},
		{
			"id": 154,
			"name": "arrayDistinct",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 467,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L467"
				}
			],
			"signatures": [
				{
					"id": 155,
					"name": "arrayDistinct",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns a new array with the elements of the input array with duplicates removed."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 467,
							"character": 29,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L467"
						}
					],
					"parameters": [
						{
							"id": 156,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			]
		},
		{
			"id": 173,
			"name": "arrayEvery",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 525,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L525"
				}
			],
			"signatures": [
				{
					"id": 174,
					"name": "arrayEvery",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Checks whether the provided array has all elements that match the specified expression.\r\nThe expression must be a valid JEXL expression string, and is applied to each element of the array.\r\nThe relative context provided to the expression is an object with the properties value and array (the original array)."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 525,
							"character": 26,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L525"
						}
					],
					"parameters": [
						{
							"id": 175,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						},
						{
							"id": 176,
							"name": "expression",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 177,
			"name": "arrayFilter",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 539,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L539"
				}
			],
			"signatures": [
				{
					"id": 178,
					"name": "arrayFilter",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns a new array with the elements of the input array that match the specified expression.\r\nThe expression must be a valid JEXL expression string, and is applied to each element of the array.\r\nThe relative context provided to the expression is an object with the properties value and array (the original array)."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 539,
							"character": 27,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L539"
						}
					],
					"parameters": [
						{
							"id": 179,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						},
						{
							"id": 180,
							"name": "expression",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			]
		},
		{
			"id": 181,
			"name": "arrayFind",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 552,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L552"
				}
			],
			"signatures": [
				{
					"id": 182,
					"name": "arrayFind",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Finds the first element in an array that matches the specified expression.\r\nThe expression must be a valid JEXL expression string, and is applied to each element of the array.\r\nThe relative context provided to the expression is an object with the properties value and array (the original array)."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 552,
							"character": 25,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L552"
						}
					],
					"parameters": [
						{
							"id": 183,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						},
						{
							"id": 184,
							"name": "expression",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 61,
			"name": "arrayJoin",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 224,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L224"
				}
			],
			"signatures": [
				{
					"id": 62,
					"name": "arrayJoin",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Joins elements of an array into a string."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 224,
							"character": 25,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L224"
						}
					],
					"parameters": [
						{
							"id": 63,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 64,
							"name": "separator",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 165,
			"name": "arrayMap",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 499,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L499"
				}
			],
			"signatures": [
				{
					"id": 166,
					"name": "arrayMap",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns an array containing the results of applying the expression parameter to each value in the array parameter.\r\nThe expression must be a valid JEXL expression string, which is applied to each element of the array.\r\nThe relative context provided to the expression is an object with the properties value, index and array (the original array)."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 499,
							"character": 24,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L499"
						}
					],
					"parameters": [
						{
							"id": 167,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						},
						{
							"id": 168,
							"name": "expression",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				}
			]
		},
		{
			"id": 185,
			"name": "arrayReduce",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 565,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L565"
				}
			],
			"signatures": [
				{
					"id": 186,
					"name": "arrayReduce",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns an aggregated value derived from applying the function parameter successively to each value in array in combination with the result of the previous application of the function.\r\nThe expression must be a valid JEXL expression string, and behaves like an infix operator between each value within the array.\r\nThe relative context provided to the expression is an object with the properties accumulator, value, index and array (the original array)."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 565,
							"character": 27,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L565"
						}
					],
					"parameters": [
						{
							"id": 187,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						},
						{
							"id": 188,
							"name": "expression",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 189,
							"name": "initialValue",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 143,
			"name": "arrayReverse",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 436,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L436"
				}
			],
			"signatures": [
				{
					"id": 144,
					"name": "arrayReverse",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Reverses the elements of an array."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 436,
							"character": 28,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L436"
						}
					],
					"parameters": [
						{
							"id": 145,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			]
		},
		{
			"id": 146,
			"name": "arrayShuffle",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 442,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L442"
				}
			],
			"signatures": [
				{
					"id": 147,
					"name": "arrayShuffle",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Shuffles the elements of an array."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 442,
							"character": 28,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L442"
						}
					],
					"parameters": [
						{
							"id": 148,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			]
		},
		{
			"id": 149,
			"name": "arraySort",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 452,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L452"
				}
			],
			"signatures": [
				{
					"id": 150,
					"name": "arraySort",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sorts the elements of an array."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 452,
							"character": 25,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L452"
						}
					],
					"parameters": [
						{
							"id": 151,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						},
						{
							"id": 152,
							"name": "expression",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 153,
							"name": "descending",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			]
		},
		{
			"id": 157,
			"name": "arrayToObject",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 473,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L473"
				}
			],
			"signatures": [
				{
					"id": 158,
					"name": "arrayToObject",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create a new object based on an array of key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 473,
							"character": 29,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L473"
						}
					],
					"parameters": [
						{
							"id": 159,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 160,
							"name": "val",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 128,
			"name": "average",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 375,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L375"
				}
			],
			"signatures": [
				{
					"id": 129,
					"name": "average",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Calculates the average of an array of numbers."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 375,
							"character": 23,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L375"
						}
					],
					"parameters": [
						{
							"id": 130,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			]
		},
		{
			"id": 73,
			"name": "base64Decode",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 256,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L256"
				}
			],
			"signatures": [
				{
					"id": 74,
					"name": "base64Decode",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Decodes a Base64 encoded string."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 256,
							"character": 28,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L256"
						}
					],
					"parameters": [
						{
							"id": 75,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 70,
			"name": "base64Encode",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 241,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L241"
				}
			],
			"signatures": [
				{
					"id": 71,
					"name": "base64Encode",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Encodes a string to Base64."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 241,
							"character": 28,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L241"
						}
					],
					"parameters": [
						{
							"id": 72,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 30,
			"name": "camelCase",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 156,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L156"
				}
			],
			"signatures": [
				{
					"id": 31,
					"name": "camelCase",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Converts the input string to camel case."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 156,
							"character": 25,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L156"
						}
					],
					"parameters": [
						{
							"id": 32,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 91,
			"name": "ceil",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 305,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L305"
				}
			],
			"signatures": [
				{
					"id": 92,
					"name": "ceil",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rounds a number up to the nearest integer."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 305,
							"character": 20,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L305"
						}
					],
					"parameters": [
						{
							"id": 93,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			]
		},
		{
			"id": 45,
			"name": "contains",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 192,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L192"
				}
			],
			"signatures": [
				{
					"id": 46,
					"name": "contains",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Checks if the input string contains the specified substring."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 192,
							"character": 24,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L192"
						}
					],
					"parameters": [
						{
							"id": 47,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 48,
							"name": "search",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 217,
			"name": "dateTimeAdd",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 700,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L700"
				}
			],
			"signatures": [
				{
					"id": 218,
					"name": "dateTimeAdd",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Adds a time range to a date and time in the ISO 8601 format."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 700,
							"character": 27,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L700"
						}
					],
					"parameters": [
						{
							"id": 219,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 220,
							"name": "unit",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 221,
							"name": "value",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 210,
			"name": "dateTimeFormat",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 672,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L672"
				}
			],
			"signatures": [
				{
					"id": 211,
					"name": "dateTimeFormat",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Converts a date and time to a provided format."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```typescript\r\ndateTimeFormat(datetime, format)\r\n$dateTimeFormat(datetime, format)\r\ndatetime|dateTimeFormat(format)\r\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The date and time in the specified format."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 672,
							"character": 30,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L672"
						}
					],
					"parameters": [
						{
							"id": 212,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The input date and time, either as a string or number."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 213,
							"name": "format",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The format to convert the date and time to."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 214,
			"name": "dateTimeToMillis",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 693,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L693"
				}
			],
			"signatures": [
				{
					"id": 215,
					"name": "dateTimeToMillis",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Parses the date and time in the ISO 8601 format and returns the number of milliseconds since the Unix epoch."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 693,
							"character": 32,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L693"
						}
					],
					"parameters": [
						{
							"id": 216,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			]
		},
		{
			"id": 53,
			"name": "endsWith",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 208,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L208"
				}
			],
			"signatures": [
				{
					"id": 54,
					"name": "endsWith",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Checks if the input string ends with the specified substring."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 208,
							"character": 24,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L208"
						}
					],
					"parameters": [
						{
							"id": 55,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 56,
							"name": "search",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 88,
			"name": "floor",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 299,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L299"
				}
			],
			"signatures": [
				{
					"id": 89,
					"name": "floor",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rounds a number down to the nearest integer."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 299,
							"character": 21,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L299"
						}
					],
					"parameters": [
						{
							"id": 90,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			]
		},
		{
			"id": 111,
			"name": "formatBase",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 345,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L345"
				}
			],
			"signatures": [
				{
					"id": 112,
					"name": "formatBase",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Formats a number as a string in the specified base."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 345,
							"character": 26,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L345"
						}
					],
					"parameters": [
						{
							"id": 113,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 114,
							"name": "base",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 115,
			"name": "formatInteger",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 351,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L351"
				}
			],
			"signatures": [
				{
					"id": 116,
					"name": "formatInteger",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Formats a number as an integer."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 351,
							"character": 29,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L351"
						}
					],
					"parameters": [
						{
							"id": 117,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 118,
							"name": "format",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 107,
			"name": "formatNumber",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 335,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L335"
				}
			],
			"signatures": [
				{
					"id": 108,
					"name": "formatNumber",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Casts the number to a string and formats it to a decimal representation as specified by the format string."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 335,
							"character": 28,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L335"
						}
					],
					"parameters": [
						{
							"id": 109,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 110,
							"name": "format",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 76,
			"name": "formUrlEncoded",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 266,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L266"
				}
			],
			"signatures": [
				{
					"id": 77,
					"name": "formUrlEncoded",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Encodes a string or object to URI."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 266,
							"character": 30,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L266"
						}
					],
					"parameters": [
						{
							"id": 78,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 8,
			"name": "length",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 47,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L47"
				}
			],
			"signatures": [
				{
					"id": 9,
					"name": "length",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the number of characters in a string, or the length of an array."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jexl\r\nlength(\"hello\") // 5\r\nlength([1, 2, 3]) // 3\r\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The number of characters in a string, or the length of an array."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 47,
							"character": 22,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L47"
						}
					],
					"parameters": [
						{
							"id": 10,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The input can be a string, an array, or an object."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			]
		},
		{
			"id": 27,
			"name": "lowercase",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 149,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L149"
				}
			],
			"signatures": [
				{
					"id": 28,
					"name": "lowercase",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Converts the input string to lowercase."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 149,
							"character": 25,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L149"
						}
					],
					"parameters": [
						{
							"id": 29,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 161,
			"name": "mapField",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 489,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L489"
				}
			],
			"signatures": [
				{
					"id": 162,
					"name": "mapField",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns a new array with the elements of the input array transformed by the specified map function."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 489,
							"character": 24,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L489"
						}
					],
					"parameters": [
						{
							"id": 163,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						},
						{
							"id": 164,
							"name": "field",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				}
			]
		},
		{
			"id": 122,
			"name": "max",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 363,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L363"
				}
			],
			"signatures": [
				{
					"id": 123,
					"name": "max",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Finds the maximum value in an array of numbers."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 363,
							"character": 19,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L363"
						}
					],
					"parameters": [
						{
							"id": 124,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			]
		},
		{
			"id": 204,
			"name": "millis",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 632,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L632"
				}
			],
			"signatures": [
				{
					"id": 205,
					"name": "millis",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the current date and time in milliseconds since the Unix epoch."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 632,
							"character": 22,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L632"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			]
		},
		{
			"id": 125,
			"name": "min",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 369,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L369"
				}
			],
			"signatures": [
				{
					"id": 126,
					"name": "min",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Finds the minimum value in an array of numbers."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 369,
							"character": 19,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L369"
						}
					],
					"parameters": [
						{
							"id": 127,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			]
		},
		{
			"id": 134,
			"name": "not",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 394,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L394"
				}
			],
			"signatures": [
				{
					"id": 135,
					"name": "not",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the logical NOT of the input."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 394,
							"character": 19,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L394"
						}
					],
					"parameters": [
						{
							"id": 136,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 202,
			"name": "now",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 625,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L625"
				}
			],
			"signatures": [
				{
					"id": 203,
					"name": "now",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the current date and time in the ISO 8601 format."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 625,
							"character": 19,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L625"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 196,
			"name": "objectEntries",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 596,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L596"
				}
			],
			"signatures": [
				{
					"id": 197,
					"name": "objectEntries",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns an array of key-value pairs from the input object."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 596,
							"character": 29,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L596"
						}
					],
					"parameters": [
						{
							"id": 198,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "tuple",
							"elements": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "any"
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 190,
			"name": "objectKeys",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 576,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L576"
				}
			],
			"signatures": [
				{
					"id": 191,
					"name": "objectKeys",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the keys of an object."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 576,
							"character": 26,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L576"
						}
					],
					"parameters": [
						{
							"id": 192,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			]
		},
		{
			"id": 199,
			"name": "objectMerge",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 606,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L606"
				}
			],
			"signatures": [
				{
					"id": 200,
					"name": "objectMerge",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns a new object with the properties of the input objects merged together."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 606,
							"character": 27,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L606"
						}
					],
					"parameters": [
						{
							"id": 201,
							"name": "args",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"packageName": "typescript",
							"packagePath": "lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 193,
			"name": "objectValues",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 586,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L586"
				}
			],
			"signatures": [
				{
					"id": 194,
					"name": "objectValues",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the values of an object."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 586,
							"character": 28,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L586"
						}
					],
					"parameters": [
						{
							"id": 195,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				}
			]
		},
		{
			"id": 40,
			"name": "pad",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 182,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L182"
				}
			],
			"signatures": [
				{
					"id": 41,
					"name": "pad",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Pads the input string on both sides to center it."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 182,
							"character": 19,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L182"
						}
					],
					"parameters": [
						{
							"id": 42,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 43,
							"name": "width",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 44,
							"name": "char",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "' '"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 82,
			"name": "parseInteger",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 283,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L283"
				}
			],
			"signatures": [
				{
					"id": 83,
					"name": "parseInteger",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Parses a string and returns an integer."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 283,
							"character": 28,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L283"
						}
					],
					"parameters": [
						{
							"id": 84,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			]
		},
		{
			"id": 33,
			"name": "pascalCase",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 165,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L165"
				}
			],
			"signatures": [
				{
					"id": 34,
					"name": "pascalCase",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Converts the input string to pascal case."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 165,
							"character": 26,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L165"
						}
					],
					"parameters": [
						{
							"id": 35,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 98,
			"name": "power",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 317,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L317"
				}
			],
			"signatures": [
				{
					"id": 99,
					"name": "power",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the value of a number raised to a power."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 317,
							"character": 21,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L317"
						}
					],
					"parameters": [
						{
							"id": 100,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 101,
							"name": "exponent",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			]
		},
		{
			"id": 105,
			"name": "randomNumber",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 330,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L330"
				}
			],
			"signatures": [
				{
					"id": 106,
					"name": "randomNumber",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Generates a random number between 0 (inclusive) and 1 (exclusive)."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 330,
							"character": 28,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L330"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			]
		},
		{
			"id": 65,
			"name": "replace",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 232,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L232"
				}
			],
			"signatures": [
				{
					"id": 66,
					"name": "replace",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Replaces occurrences of a specified string."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 232,
							"character": 23,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L232"
						}
					],
					"parameters": [
						{
							"id": 67,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 68,
							"name": "search",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 69,
							"name": "replacement",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 94,
			"name": "round",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 311,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L311"
				}
			],
			"signatures": [
				{
					"id": 95,
					"name": "round",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rounds a number to the nearest integer."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 311,
							"character": 21,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L311"
						}
					],
					"parameters": [
						{
							"id": 96,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 97,
							"name": "decimals",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			]
		},
		{
			"id": 57,
			"name": "split",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 216,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L216"
				}
			],
			"signatures": [
				{
					"id": 58,
					"name": "split",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Splits the input string into an array of substrings."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 216,
							"character": 21,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L216"
						}
					],
					"parameters": [
						{
							"id": 59,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 60,
							"name": "separator",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			]
		},
		{
			"id": 102,
			"name": "sqrt",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 324,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L324"
				}
			],
			"signatures": [
				{
					"id": 103,
					"name": "sqrt",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the square root of a number."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 324,
							"character": 20,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L324"
						}
					],
					"parameters": [
						{
							"id": 104,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			]
		},
		{
			"id": 49,
			"name": "startsWith",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 200,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L200"
				}
			],
			"signatures": [
				{
					"id": 50,
					"name": "startsWith",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Checks if the input string starts with the specified substring."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 200,
							"character": 26,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L200"
						}
					],
					"parameters": [
						{
							"id": 51,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 52,
							"name": "search",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 11,
			"name": "substring",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 73,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L73"
				}
			],
			"signatures": [
				{
					"id": 12,
					"name": "substring",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gets a substring of a string."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jexl\r\nsubstring(\"hello world\", 0, 5) // \"hello\"\r\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The substring of the input string."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 73,
							"character": 25,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L73"
						}
					],
					"parameters": [
						{
							"id": 13,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The input string."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 14,
							"name": "start",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The starting index of the substring."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 15,
							"name": "length",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The length of the substring."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 20,
			"name": "substringAfter",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 132,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L132"
				}
			],
			"signatures": [
				{
					"id": 21,
					"name": "substringAfter",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the substring after the first occurrence of the character sequence chars in str."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jexl\r\nsubstringAfter(\"hello world\", \" \") // \"world\"\r\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The substring after the first occurrence of the character sequence chars in str."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 132,
							"character": 30,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L132"
						}
					],
					"parameters": [
						{
							"id": 22,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The input string."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 23,
							"name": "chars",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The character sequence to search for."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 16,
			"name": "substringBefore",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 110,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L110"
				}
			],
			"signatures": [
				{
					"id": 17,
					"name": "substringBefore",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the substring before the first occurrence of the character sequence chars in str."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jexl\r\nsubstringBefore(\"hello world\", \" \") // \"hello\"\r\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The substring before the first occurrence of the character sequence chars in str."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 110,
							"character": 31,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L110"
						}
					],
					"parameters": [
						{
							"id": 18,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The input string."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 19,
							"name": "chars",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The character sequence to search for."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 119,
			"name": "sum",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 357,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L357"
				}
			],
			"signatures": [
				{
					"id": 120,
					"name": "sum",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Calculates the sum of an array of numbers."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 357,
							"character": 19,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L357"
						}
					],
					"parameters": [
						{
							"id": 121,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			]
		},
		{
			"id": 137,
			"name": "switchCase",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 409,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L409"
				}
			],
			"signatures": [
				{
					"id": 138,
					"name": "switchCase",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Evaluates a list of predicates and returns the first result expression whose predicate is satisfied."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jexl\r\nswitch(expression, case1, result1, case2, result2, ..., default)\r\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The result of the first case whose predicate is satisfied, or the default value if no case is satisfied."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 409,
							"character": 26,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L409"
						}
					],
					"parameters": [
						{
							"id": 139,
							"name": "args",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isRest": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The arguments array where the first element is the expression to evaluate, followed by pairs of case and result, and optionally a default value."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 131,
			"name": "toBoolean",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 382,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L382"
				}
			],
			"signatures": [
				{
					"id": 132,
					"name": "toBoolean",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Converts the input to a boolean."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 382,
							"character": 25,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L382"
						}
					],
					"parameters": [
						{
							"id": 133,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 206,
			"name": "toDateTime",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 639,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L639"
				}
			],
			"signatures": [
				{
					"id": 207,
					"name": "toDateTime",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Parses the number of milliseconds since the Unix epoch or parses a string (with or without specified format) and returns the date and time in the ISO 8601 format."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 639,
							"character": 26,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L639"
						}
					],
					"parameters": [
						{
							"id": 208,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 209,
							"name": "format",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 5,
			"name": "toJson",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 31,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L31"
				}
			],
			"signatures": [
				{
					"id": 6,
					"name": "toJson",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Parses the string and returns a JSON object."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jexl\r\nparseJson('{\"key\": \"value\"}') // { key: \"value\" }\r\n'{\"key\": \"value\"}'|toJson // { key: \"value\" }"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 31,
							"character": 22,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L31"
						}
					],
					"parameters": [
						{
							"id": 7,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 79,
			"name": "toNumber",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 276,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L276"
				}
			],
			"signatures": [
				{
					"id": 80,
					"name": "toNumber",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Converts the input to a number."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 276,
							"character": 24,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L276"
						}
					],
					"parameters": [
						{
							"id": 81,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			]
		},
		{
			"id": 1,
			"name": "toString",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 19,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L19"
				}
			],
			"signatures": [
				{
					"id": 2,
					"name": "toString",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Casts the input to a string."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jexl\r\nstring(123) // \"123\"\r\n123|string // \"123\"\r\n```"
									}
								]
							},
							{
								"tag": "@group",
								"content": [
									{
										"kind": "text",
										"text": "Type Conversion"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 19,
							"character": 24,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L19"
						}
					],
					"parameters": [
						{
							"id": 3,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The input can be any type."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 4,
							"name": "prettify",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the output will be pretty-printed."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 36,
			"name": "trim",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 171,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L171"
				}
			],
			"signatures": [
				{
					"id": 37,
					"name": "trim",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Trims whitespace from both ends of a string."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 171,
							"character": 20,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L171"
						}
					],
					"parameters": [
						{
							"id": 38,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 39,
							"name": "trimChar",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 24,
			"name": "uppercase",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 143,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L143"
				}
			],
			"signatures": [
				{
					"id": 25,
					"name": "uppercase",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Converts the input string to uppercase."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 143,
							"character": 25,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L143"
						}
					],
					"parameters": [
						{
							"id": 26,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 226,
			"name": "uuid",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "extended-grammar.ts",
					"line": 728,
					"character": 13,
					"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L728"
				}
			],
			"signatures": [
				{
					"id": 227,
					"name": "uuid",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Generate a new UUID (Universally Unique Identifier)."
							}
						]
					},
					"sources": [
						{
							"fileName": "extended-grammar.ts",
							"line": 728,
							"character": 20,
							"url": "https://github.com/nikoraes/jexl-extended/blob/f08eb505596c1e77974bda5a3b2b43428824b145/src/extended-grammar.ts#L728"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Functions",
			"children": [
				222,
				85,
				169,
				140,
				154,
				173,
				177,
				181,
				61,
				165,
				185,
				143,
				146,
				149,
				157,
				128,
				73,
				70,
				30,
				91,
				45,
				217,
				210,
				214,
				53,
				88,
				111,
				115,
				107,
				76,
				8,
				27,
				161,
				122,
				204,
				125,
				134,
				202,
				196,
				190,
				199,
				193,
				40,
				82,
				33,
				98,
				105,
				65,
				94,
				57,
				102,
				49,
				11,
				20,
				16,
				119,
				137,
				131,
				206,
				5,
				79,
				36,
				24,
				226
			]
		},
		{
			"title": "Type Conversion",
			"children": [
				1
			]
		}
	],
	"packageName": "jexl-extended",
	"readme": [
		{
			"kind": "text",
			"text": "# Jexl Extended Grammar\n\nThis package includes an extended grammar for the [Jexl expression parser and evaluator](https://github.com/TomFrost/Jexl).\n\n## Features\n\n- 🚀 **80+ Built-in Functions** - String manipulation, math, arrays, objects, dates, and more\n- 🎨 **Monaco Editor Support** - Syntax highlighting, IntelliSense, and hover documentation  \n- 📝 **TypeScript Support** - Full type definitions included\n- 🔧 **Modular** - Use the entire library or import individual functions\n- 🎮 **Interactive Playground** - Try expressions online at [jexl-playground.pages.dev](https://jexl-playground.pages.dev)\n\n## Installation\n\n"
		},
		{
			"kind": "code",
			"text": "```bash\nnpm install jexl-extended\n```"
		},
		{
			"kind": "text",
			"text": "\n\n## Quick Start\n\n"
		},
		{
			"kind": "code",
			"text": "```javascript\nimport jexl from 'jexl-extended';\n\nconst data = [\n  {name: \"John\", age: 32}, \n  {name: \"Jane\", age: 34}, \n  {name: \"Bob\", age: 33}\n];\n\nconst result = jexl.evalSync('data|filter(\"value.age > 32\")|map(\"value.name\")|join(\", \")', {data});\n// \"Jane, Bob\"\n```"
		},
		{
			"kind": "text",
			"text": "\n\n## Monaco Editor Integration\n\nGet a rich IDE experience for JEXL expressions:\n\n"
		},
		{
			"kind": "code",
			"text": "```typescript\nimport * as monaco from 'monaco-editor';\nimport { Monaco } from 'jexl-extended';\n\n// Register JEXL language support\nMonaco.registerJexlLanguage(monaco);\n\n// Create editor with JEXL support\nconst editor = Monaco.createJexlEditor(monaco, document.getElementById('editor'), {\n  value: 'users|filter(\"value.active\")|map(\"value.name\")|sort',\n  theme: 'vs-dark'\n});\n```"
		},
		{
			"kind": "text",
			"text": "\n\n[📖 See full Monaco integration guide]("
		},
		{
			"kind": "relative-link",
			"text": "./MONACO.md",
			"target": 2
		},
		{
			"kind": "text",
			"text": ")\n\nIt is also possible to use the extended grammar in the original Jexl library by importing parts of the grammar you need and adding it to the Jexl instance.\n\n"
		},
		{
			"kind": "code",
			"text": "```javascript\nimport jexl from 'jexl';\nimport { arrayMap } from 'jexl-extended/extended-grammar';\n\njexl.addTransform('map', arrayMap);\nconst result = jexl.evalSync('[{name:\"tek\",age:32}, {name:\"bar\",age:34}, {name:\"baz\",age:33}, {name:\"foo\",age:35}]|map(\"value.age\")');\n// [32, 34, 33, 35]\n```"
		}
	],
	"symbolIdMap": {
		"0": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": ""
		},
		"1": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "toString"
		},
		"2": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "toString"
		},
		"3": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"4": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "prettify"
		},
		"5": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "toJson"
		},
		"6": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "toJson"
		},
		"7": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"8": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "length"
		},
		"9": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "length"
		},
		"10": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"11": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "substring"
		},
		"12": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "substring"
		},
		"13": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"14": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "start"
		},
		"15": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "length"
		},
		"16": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "substringBefore"
		},
		"17": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "substringBefore"
		},
		"18": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"19": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "chars"
		},
		"20": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "substringAfter"
		},
		"21": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "substringAfter"
		},
		"22": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"23": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "chars"
		},
		"24": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "uppercase"
		},
		"25": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "uppercase"
		},
		"26": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"27": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "lowercase"
		},
		"28": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "lowercase"
		},
		"29": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"30": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "camelCase"
		},
		"31": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "camelCase"
		},
		"32": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"33": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "pascalCase"
		},
		"34": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "pascalCase"
		},
		"35": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"36": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "trim"
		},
		"37": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "trim"
		},
		"38": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"39": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "trimChar"
		},
		"40": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "pad"
		},
		"41": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "pad"
		},
		"42": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"43": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "width"
		},
		"44": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "char"
		},
		"45": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "contains"
		},
		"46": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "contains"
		},
		"47": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"48": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "search"
		},
		"49": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "startsWith"
		},
		"50": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "startsWith"
		},
		"51": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"52": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "search"
		},
		"53": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "endsWith"
		},
		"54": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "endsWith"
		},
		"55": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"56": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "search"
		},
		"57": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "split"
		},
		"58": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "split"
		},
		"59": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"60": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "separator"
		},
		"61": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "arrayJoin"
		},
		"62": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "arrayJoin"
		},
		"63": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"64": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "separator"
		},
		"65": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "replace"
		},
		"66": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "replace"
		},
		"67": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"68": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "search"
		},
		"69": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "replacement"
		},
		"70": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "base64Encode"
		},
		"71": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "base64Encode"
		},
		"72": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"73": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "base64Decode"
		},
		"74": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "base64Decode"
		},
		"75": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"76": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "formUrlEncoded"
		},
		"77": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "formUrlEncoded"
		},
		"78": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"79": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "toNumber"
		},
		"80": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "toNumber"
		},
		"81": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"82": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "parseInteger"
		},
		"83": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "parseInteger"
		},
		"84": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"85": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "absoluteValue"
		},
		"86": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "absoluteValue"
		},
		"87": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"88": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "floor"
		},
		"89": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "floor"
		},
		"90": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"91": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "ceil"
		},
		"92": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "ceil"
		},
		"93": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"94": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "round"
		},
		"95": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "round"
		},
		"96": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"97": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "decimals"
		},
		"98": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "power"
		},
		"99": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "power"
		},
		"100": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"101": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "exponent"
		},
		"102": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "sqrt"
		},
		"103": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "sqrt"
		},
		"104": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"105": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "randomNumber"
		},
		"106": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "randomNumber"
		},
		"107": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "formatNumber"
		},
		"108": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "formatNumber"
		},
		"109": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"110": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "format"
		},
		"111": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "formatBase"
		},
		"112": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "formatBase"
		},
		"113": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"114": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "base"
		},
		"115": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "formatInteger"
		},
		"116": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "formatInteger"
		},
		"117": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"118": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "format"
		},
		"119": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "sum"
		},
		"120": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "sum"
		},
		"121": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"122": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "max"
		},
		"123": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "max"
		},
		"124": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"125": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "min"
		},
		"126": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "min"
		},
		"127": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"128": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "average"
		},
		"129": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "average"
		},
		"130": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"131": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "toBoolean"
		},
		"132": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "toBoolean"
		},
		"133": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"134": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "not"
		},
		"135": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "not"
		},
		"136": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"137": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "switchCase"
		},
		"138": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "switchCase"
		},
		"139": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "args"
		},
		"140": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "arrayAppend"
		},
		"141": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "arrayAppend"
		},
		"142": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"143": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "arrayReverse"
		},
		"144": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "arrayReverse"
		},
		"145": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"146": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "arrayShuffle"
		},
		"147": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "arrayShuffle"
		},
		"148": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"149": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "arraySort"
		},
		"150": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "arraySort"
		},
		"151": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"152": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "expression"
		},
		"153": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "descending"
		},
		"154": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "arrayDistinct"
		},
		"155": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "arrayDistinct"
		},
		"156": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"157": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "arrayToObject"
		},
		"158": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "arrayToObject"
		},
		"159": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"160": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "val"
		},
		"161": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "mapField"
		},
		"162": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "mapField"
		},
		"163": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"164": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "field"
		},
		"165": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "arrayMap"
		},
		"166": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "arrayMap"
		},
		"167": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"168": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "expression"
		},
		"169": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "arrayAny"
		},
		"170": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "arrayAny"
		},
		"171": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"172": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "expression"
		},
		"173": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "arrayEvery"
		},
		"174": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "arrayEvery"
		},
		"175": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"176": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "expression"
		},
		"177": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "arrayFilter"
		},
		"178": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "arrayFilter"
		},
		"179": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"180": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "expression"
		},
		"181": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "arrayFind"
		},
		"182": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "arrayFind"
		},
		"183": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"184": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "expression"
		},
		"185": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "arrayReduce"
		},
		"186": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "arrayReduce"
		},
		"187": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"188": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "expression"
		},
		"189": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "initialValue"
		},
		"190": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "objectKeys"
		},
		"191": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "objectKeys"
		},
		"192": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"193": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "objectValues"
		},
		"194": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "objectValues"
		},
		"195": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"196": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "objectEntries"
		},
		"197": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "objectEntries"
		},
		"198": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"199": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "objectMerge"
		},
		"200": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "objectMerge"
		},
		"201": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "args"
		},
		"202": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "now"
		},
		"203": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "now"
		},
		"204": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "millis"
		},
		"205": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "millis"
		},
		"206": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "toDateTime"
		},
		"207": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "toDateTime"
		},
		"208": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"209": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "format"
		},
		"210": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "dateTimeFormat"
		},
		"211": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "dateTimeFormat"
		},
		"212": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"213": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "format"
		},
		"214": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "dateTimeToMillis"
		},
		"215": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "dateTimeToMillis"
		},
		"216": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"217": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "dateTimeAdd"
		},
		"218": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "dateTimeAdd"
		},
		"219": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"220": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "unit"
		},
		"221": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "value"
		},
		"222": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "_eval"
		},
		"223": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "_eval"
		},
		"224": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "input"
		},
		"225": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "expression"
		},
		"226": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "uuid"
		},
		"227": {
			"packageName": "jexl-extended",
			"packagePath": "src/extended-grammar.ts",
			"qualifiedName": "uuid"
		}
	},
	"files": {
		"entries": {
			"1": "src/extended-grammar.ts",
			"2": "MONACO.md",
			"3": "README.md",
			"4": ""
		},
		"reflections": {
			"1": 0,
			"3": 0,
			"4": 0
		}
	}
}
